dtmc

const int CMAX;
const double THRESHOLD;

//Features
const int fSSPO2; //Spo2Sensor
const int fSTemp; //TemperatureSensor
const int fSECG; // ECGSensor
const int fSACC; // ACCSensor
const int fOxy; //Oxygenation
const int fTemp; //Temprature
const int fPlsRt; //PulseRate
const int fPos; //Position
const int fFall; //Fall
const int fMem; // Memory


//param int fSSPO2;
//param int fSTemp;
//param int fSECG;
//param int fSACC;
//param int fOxy;
//param int fTemp;
//param int fPlsRt;
//param int fPos;
//param int fFall;
//param int fMem;
//param int fSqlite;


//Reliability
const double r = 0.999;
const double rBM = r;
const double rSECG = r;
const double rSSPO2 = r;
const double rSTemp = r;
const double rSAcc = r;
const double rBus = r;
const double rOxy = r;
const double rTemp = r;
const double rPlsRt = r;
const double rPos  = r;
const double rFall  = r;
const double rPersistence = r;
const double rSqlite = r;
const double rMem = r;
const double rAM = r;
const double rStateMachine = r;
const double rSPLManager = r;
const double rQosManager = r;
const double rConfigurator = r;

//Usage Profile
const double reconfigProfile = 0.5;



module Capture //Sytem captures vital signal
	s0 : [0..6] init 1;
	pECG : [0..1] init 0;
	pSPO2 : [0..1] init 0;
	pTEMP: [0..1] init 0;
	pACC: [0..1] init 0;

	[fails0] s0 = 0 -> (s0'=0);//Fail State

//  [] s0 = 1 -> 	 (1-fSSPO2)*(fSECG)  *(1-fSTemp)*(1-fSACC) : (s0'=2)&(pECG'=1)
//		    	+ (fSSPO2)  *(1-fSECG)*(1-fSTemp)*(1-fSACC) : (s0'=2)&(pSPO2'=1)
//		      	+ (1-fSSPO2)*(1-fSECG)*(fSTemp)  *(1-fSACC) : (s0'=2)&(pTEMP'=1)
//			    + (fSSPO2)  *(fSECG)  *(1-fSTemp)*(1-fSACC) : (s0'=2)&(pECG'=1)&(pSPO2'=1)
//			    + (1-fSSPO2)*(fSECG)  *(fSTemp)  *(1-fSACC) : (s0'=2)&(pECG'=1)&(pTEMP'=1)
//			    + (fSSPO2)  *(1-fSECG)*(fSTemp)  *(1-fSACC) : (s0'=2)&(pSPO2'=1)&(pTEMP'=1)
//			    + (fSSPO2)  *(fSECG)  *(fSTemp)  *(1-fSACC) : (s0'=2)&(pSPO2'=1)&(pTEMP'=1)&(pECG'=1)
//			+ (1-fSSPO2)*(1-fSECG)*(1-fSTemp)*(1-fSACC) : (s0'=0)
//			+ (1-fSSPO2)*(fSECG)  *(1-fSTemp)*(fSACC) : (s0'=2)&(pECG'=1)&(pACC'=1)
//			+ (fSSPO2)  *(1-fSECG)*(1-fSTemp)*(fSACC) : (s0'=2)&(pSPO2'=1)&(pACC'=1)
//			+ (1-fSSPO2)*(1-fSECG)*(fSTemp)  *(fSACC) : (s0'=2)&(pTEMP'=1)&(pACC'=1)
//			+ (fSSPO2)  *(fSECG)  *(1-fSTemp)*(fSACC) : (s0'=2)&(pECG'=1)&(pSPO2'=1)&(pACC'=1)
//			+ (1-fSSPO2)*(fSECG)  *(fSTemp)  *(fSACC) : (s0'=2)&(pECG'=1)&(pTEMP'=1)&(pACC'=1)
//			+ (fSSPO2)  *(1-fSECG)*(fSTemp)  *(fSACC) : (s0'=2)&(pSPO2'=1)&(pTEMP'=1)&(pACC'=1)
//			+ (fSSPO2)  *(fSECG)  *(fSTemp)  *(fSACC) : (s0'=2)&(pSPO2'=1)&(pTEMP'=1)&(pECG'=1)&(pACC'=1)
//			+ (1-fSSPO2)*(1-fSECG)*(1-fSTemp)*(fSACC) : (s0'=2)&(pACC'=1);


	[] s0 = 1 ->  (fSSPO2/max(fSSPO2 + fSECG + fSTemp + fSACC,1)) : (pSPO2'=1) & (s0'=2)
	             + (fSECG/max(fSSPO2 + fSECG + fSTemp + fSACC,1)) : (pECG'=1) & (s0'=2)
	             + (fSTemp/max(fSSPO2 + fSECG + fSTemp + fSACC,1)) : (pTEMP'=1) & (s0'=2)
	             + (fSACC/max(fSSPO2 + fSECG + fSTemp + fSACC,1)) : (pACC'=1) & (s0'=2)
	             + 1-max(fSSPO2,fSECG,fSTemp,fSACC) : (s0'=0);


	[sendPacketECG] s0 = 2 & pECG=1 -> (rSECG) : (s0'=3) + (1 - rSECG) : (s0'=0);
	[sendSituationECGPckt] s0 = 3 & pECG=1 -> (rBus) : (s0'=4) + (1 - rBus): (s0'=0);
	[sendSituationECGPckt_return] s0 = 4 & pECG=1 -> (rSECG) : (s0'=5) + (1 - rSECG): (s0'=0);

	[sendPacketSPO2] s0 = 2 & pSPO2=1 -> (rSSPO2) : (s0'=3) + (1 - rSSPO2) : (s0'=0);
	[sendSituationSPO2Pckt] s0 = 3 & pSPO2=1 -> (rBus) : (s0'=4) + (1 - rBus) : (s0'=0);
	[sendSituationSPO2Pckt_return] s0 = 4 & pSPO2=1 -> (rSSPO2) : (s0'=5) + (1 - rSSPO2) : (s0'=0);

	[sendPacketTemp] s0 = 2 & pTEMP=1 -> (rSTemp) : (s0'=3) + (1 - rSTemp) : (s0'=0);
	[sendSituationTempPckt] s0 = 3 & pTEMP=1 -> (rBus) : (s0'=4) + (1 - rBus) : (s0'=0);
	[sendSituationTempPckt_return] s0 = 4 & pTEMP=1 -> (rSTemp) : (s0'=5) + (1 - rSTemp) : (s0'=0);

	[sendPacketAcc] s0 = 2 & pACC =1 -> (rSAcc) : (s0'=3) + (1 - rSAcc) : (s0'=0);
	[sendSituationAccPckt] s0 = 3 & pACC=1 -> (rBus) : (s0'=4) + (1 - rBus) : (s0'=0);
	[sendSituationAccPckt_return] s0 = 4 & pACC=1 -> (rSAcc) : (s0'=5) + (1 - rSAcc) : (s0'=0);


	[start_Situation] s0 = 5 -> (s0'=5);
endmodule


module Situation // System identifies situations
	s1 : [0..71] init 1;

	[fails1] s1 = 0 -> (s1'=0);//Fail State


	[start_Situation] s1 = 1 -> 		//Activity Init
			(fPlsRt) : (s1'=2) +	//fPlsRt selected
			(1 - fPlsRt) : (s1'=15);//fPlsRt deselected
	[registerPlsRt] s1 = 2 -> (rBus) : (s1'=3) + (1-rBus) : (s1'=0);
	[registerPlsRt_return] s1 = 3 -> (rPlsRt) : (s1'=4) + (1-rPlsRt) : (s1'=0);
	[sendEventPlsRt] s1 = 4 -> (rPlsRt) : (s1'=5) + (1 - rPlsRt) : (s1'=0);
	[persistPersistence] s1 = 5 -> (rPersistence) : (s1'=6)  + (1-rPersistence) : (s1'=0);

	[fSqlite_Selection] s1 = 6 ->
				(1-fMem) : (s1'=7) +	//fSqlite selected
				(fMem) : (s1'=9);//fSqlite deselected
	[persistSqlite] s1 = 7 -> (rSqlite) : (s1'=8)  +	(1-rSqlite) : (s1'=0);
	[persistSqlite_return] s1 = 8 -> (rPersistence) : (s1'=9)  + (1-rPersistence) : (s1'=0);

	[fMem_Selection] s1 = 9 ->
				(fMem) : (s1'=10) +	//fMem selected
				(1 - fMem) : (s1'=12);//fMem deselected
	[persistMem] s1 = 10 -> (rMem) : (s1'=11)  +	(1-rMem) : (s1'=0);
	[persistMem_return] s1 = 11 -> (rPersistence) : (s1'=12)  + (1-rPersistence) : (s1'=0);

	[persistPersistence_return] s1 = 12 -> (rPlsRt) : (s1'=13) + (1-rPlsRt) : (s1'=0);
	[sendSituationPlsRt] s1 = 13 -> (rBus) : (s1'=14) + (1 - rBus) : (s1'=0);
	[sendSituationPlsRt_return] s1 = 14 -> (rPlsRt) : (s1'=15) + (1 - rPlsRt) : (s1'=0);


	[fOxy_Selection] s1 = 15 -> 		//Activity Init
			(fOxy) : (s1'=16) +	//fOxy selected
			(1 - fOxy) : (s1'=29);	//fOxy deselected
	[registerOxy] s1 = 16 -> (rBus) : (s1'=17) + (1-rBus) : (s1'=0);
	[registerOxy_return] s1 = 17 -> (rOxy) : (s1'=18) + (1-rOxy) : (s1'=0);
	[sendEventOxy] s1 = 18 -> (rOxy) : (s1'=19) + (1 - rOxy) : (s1'=0);
	[persistPersistence] s1 = 19 -> (rPersistence) : (s1'=20)  + (1-rPersistence) : (s1'=0);
	[fSqlite_Selection] s1 = 20 ->
				(1- fMem) : (s1'=21) +	//fSqlite selected
				(fMem) : (s1'=23);//fSqlite deselected
	[persistSqlite] s1 = 21 -> (rSqlite) : (s1'=22)  +	(1-rSqlite) : (s1'=0);
	[persistSqlite_return] s1 = 22 -> (rPersistence) : (s1'=23)  + (1-rPersistence) : (s1'=0);
	[fMem_Selection] s1 = 23 ->
				(fMem) : (s1'=24) +	//fMem selected
				(1 - fMem) : (s1'=26);//fMem deselected
	[persistMem] s1 = 24 -> (rMem) : (s1'=25)  +	(1-rMem) : (s1'=0);
	[persistMem_return] s1 = 25 -> (rPersistence) : (s1'=26)  + (1-rPersistence) : (s1'=0);
	[persistPersistence_return] s1 = 26 -> (rOxy) : (s1'=27) + (1-rOxy) : (s1'=0);
	[sendSituationOxy] s1 = 27 -> (rBus) : (s1'=28) + (1 - rBus) : (s1'=0);
	[sendSituationOxy_return] s1 = 28 -> (rOxy) : (s1'=29) + (1 - rOxy) : (s1'=0);


	[fTemp_Selection] s1 = 29 -> 		//Activity Init
			(fTemp) : (s1'=30) +	//fTemp selected
			(1 - fTemp) : (s1'=43);	//fTemp deselected
	[registerTemp] s1 = 30 -> (rBus) : (s1'=31) + (1-rBus) : (s1'=0);
	[registerTemp_return] s1 = 31 -> (rTemp) : (s1'=32) + (1-rTemp) : (s1'=0);
	[sendEventTemp] s1 = 32 -> (rTemp) : (s1'=33) + (1 - rTemp) : (s1'=0);
	[persistPersistence] s1 = 33 -> (rPersistence) : (s1'=34)  + (1-rPersistence) : (s1'=0);
	[fSqlite_Selection] s1 = 34 ->
				(1- fMem) : (s1'=35) +	//fSqlite selected
				(fMem) : (s1'=37);//fSqlite deselected
	[persistSqlite] s1 = 35 -> (rSqlite) : (s1'=36)  +	(1-rSqlite) : (s1'=0);
	[persistSqlite_return] s1 = 36 -> (rPersistence) : (s1'=37)  + (1-rPersistence) : (s1'=0);
	[fMem_Selection] s1 = 37 ->
				(fMem) : (s1'=38) +	//fMem selected
				(1 - fMem) : (s1'=40);//fMem deselected
	[persistMem] s1 = 38 -> (rMem) : (s1'=39)  +	(1-rMem) : (s1'=0);
	[persistMem_return] s1 = 39 -> (rPersistence) : (s1'=40)  + (1-rPersistence) : (s1'=0);
	[persistPersistence_return] s1 = 40 -> (rTemp) : (s1'=41) + (1-rTemp) : (s1'=0);
	[sendSituationTemp] s1 = 41 -> (rBus) : (s1'=42) + (1 - rBus) : (s1'=0);
	[sendSituationTemp_return] s1 = 42 -> (rTemp) : (s1'=43) + (1 - rTemp) : (s1'=0);


	[fPos_Selection] s1 = 43 -> 		//Activity Init
			(fPos) : (s1'=44) +	//fPos selected
			(1 - fPos) : (s1'=57);	//fPos deselected
	[registerPos] s1 = 44 -> (rBus) : (s1'=45) + (1-rBus) : (s1'=0);
	[registerPos_return] s1 = 45 -> (rPos) : (s1'=46) + (1-rPos) : (s1'=0);
	[sendEventPos] s1 = 46 -> (rPos) : (s1'=47) + (1 - rPos) : (s1'=0);
	[persistPersistence] s1 = 47 -> (rPersistence) : (s1'=48)  + (1-rPersistence) : (s1'=0);
	[fSqlite_Selection] s1 = 48 ->
				(1-fMem) : (s1'=49) +	//fSqlite selected
				(fMem) : (s1'=51);//fSqlite deselected
	[persistSqlite] s1 = 49 -> (rSqlite) : (s1'=50)  +	(1-rSqlite) : (s1'=0);
	[persistSqlite_return] s1 = 50 -> (rPersistence) : (s1'=51)  + (1-rPersistence) : (s1'=0);
	[fMem_Selection] s1 = 51 ->
				(fMem) : (s1'=52) +	//fMem selected
				(1 - fMem) : (s1'=54);//fMem deselected
	[persistMem] s1 = 52 -> (rMem) : (s1'=53)  +	(1-rMem) : (s1'=0);
	[persistMem_return] s1 = 53 -> (rPersistence) : (s1'=54)  + (1-rPersistence) : (s1'=0);
	[persistPersistence_return] s1 = 54 -> (rPos) : (s1'=55) + (1-rPos) : (s1'=0);
	[sendSituationPos] s1 = 55 -> (rBus) : (s1'=56) + (1 - rBus) : (s1'=0);
	[sendSituationPos_return] s1 = 56 -> (rPos) : (s1'=57) + (1 - rPos) : (s1'=0);


	[fFall_Selection] s1 = 57 -> 		//Activity Init
			(fFall) : (s1'=58) +	//fFall selected
			(1 - fFall) : (s1'=71);	//fFall deselected
	[registerFall] s1 = 58 -> (rBus) : (s1'=59) + (1-rBus) : (s1'=0);
	[registerFall_return] s1 = 59 -> (rFall) : (s1'=60) + (1-rFall) : (s1'=0);
	[sendEventFall] s1 = 60 -> (rFall) : (s1'=61) + (1 - rFall) : (s1'=0);
	[persistPersistence] s1 = 61 -> (rPersistence) : (s1'=62)  + (1-rPersistence) : (s1'=0);
	[fSqlite_Selection] s1 = 62 ->
				(1-fMem) : (s1'=63) +	//fSqlite selected
				(fMem) : (s1'=65);//fSqlite deselected
	[persistSqlite] s1 = 63 -> (rSqlite) : (s1'=64)  +	(1-rSqlite) : (s1'=0);
	[persistSqlite_return] s1 = 64 -> (rPersistence) : (s1'=65)  + (1-rPersistence) : (s1'=0);
	[fMem_Selection] s1 = 65 ->
				(fMem) : (s1'=66) +	//fMem selected
				(1 - fMem) : (s1'=68);//fMem deselected
	[persistMem] s1 = 66 -> (rMem) : (s1'=67)  +	(1-rMem) : (s1'=0);
	[persistMem_return] s1 = 67 -> (rPersistence) : (s1'=68)  + (1-rPersistence) : (s1'=0);
	[persistPersistence_return] s1 = 68 -> (rFall) : (s1'=69) + (1-rFall) : (s1'=0);
	[sendSituationFall] s1 = 69 -> (rBus) : (s1'=70) + (1 - rBus) : (s1'=0);
	[sendSituationFall_return] s1 = 70 -> (rFall) : (s1'=71) + (1 - rFall) : (s1'=0);



	[start_QosGoal] s1 = 71 -> (s1'=71);

endmodule

module QosGoal // Was there any change in QoS goal
	s2 : [0..9] init 1;

	[fails2] s2 = 0 -> (s2'=0);//Fail State

	[start_QosGoal] s2 = 1 -> (s2'=2); //Activity Init

	[sendEventAM] s2 = 2 -> (rAM) : (s2'=3) + (1 - rAM) : (s2'=0);
	[getQosRequired] s2 = 3 -> (rStateMachine) : (s2'=4) + (1 - rStateMachine) : (s2'=0);
	[getQosRequired_return] s2 = 4 -> (rAM) : (s2'=5) + (1 - rAM) : (s2'=0);
	[ntfyChngQosRequired] s2 = 5 -> (rAM) : (s2'=6) + (1 - rAM) : (s2'=0);
	[sendEventAM_return] s2 = 6 -> (rAM) : (s2'=7) + (1 - rAM) : (s2'=0);

	[profile_Decision] s2 = 7 ->
				(reconfigProfile) : (s2'=8) +   //Reconfiguration Triggered
				(1 - reconfigProfile) : (s2'=9);//End execution

	[start_Reconfiguration] s2 = 8 -> (s2'=8);
	[end_QosGoal] s2 = 9 -> (s2'=9);

endmodule

module Reconfiguration // System configuration changes do achive new goal
	s3 : [0..10] init 1;

	[fails3] s3 = 0 -> (s3'=0);//Fail State

	[start_Reconfiguration] s3 = 1 -> (s3'=2);

	[getQosRequiredAM] s3 = 2 -> (rStateMachine) : (s3'=3) + (1 - rStateMachine) : (s3'=0);
	[getQosRequiredAM_return] s3 = 3 -> (rAM) : (s3'=4) + (1 - rAM) : (s3'=0);
	[searchNewConfiguration] s3 = 4 -> (rSPLManager) : (s3'=5) + (1 - rSPLManager) : (s3'=0);
	[searchNewConfiguration_return] s3 = 5 -> (rAM) : (s3'=6) + (1 - rAM) : (s3'=0);
	[calculateQos] s3 = 6 -> (rQosManager) : (s3'=7) + (1 - rQosManager) : (s3'=0);
	[calculateQos_return] s3 = 7 -> (rAM) : (s3'=8) + (1 - rAM) : (s3'=0);
	[configure] s3 = 8 -> (rConfigurator) : (s3'=9) + (1 - rConfigurator) : (s3'=0);
	[configure_return] s3 = 9 -> (rAM) : (s3'=10) + (1 - rAM) : (s3'=0);

	[end_Reconfiguration]  s3 = 10 -> (s3'=10);

endmodule



